{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf370
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red35\green110\blue37;\red104\green56\blue33;\red137\green19\blue21;
\red118\green15\blue80;\red63\green110\blue116;\red46\green13\blue110;\red92\green38\blue153;\red38\green71\blue75;
\red0\green0\blue255;\red100\green56\blue32;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab864
\pard\tx864\pardeftab864\pardirnatural

\f0\fs36 \cf2 \CocoaLigature0 //\cf0 \
\cf2 //  SNViewController.m\cf0 \
\cf2 //  sinaweibo_ios_sdk_demo\cf0 \
\cf2 //\cf0 \
\cf2 //  Created by Wade Cheng on 4/23/12.\cf0 \
\cf2 //  Copyright (c) 2012 SINA. All rights reserved.\cf0 \
\cf2 //\cf0 \
\
\cf3 #import \cf4 "SNViewController.h"\cf0 \
\cf3 #import \cf4 "SNAppDelegate.h"\cf0 \
\
\cf5 @interface\cf0  SNViewController ()\
\
\cf5 @end\cf0 \
\
\cf5 @implementation\cf0  SNViewController\
\
- (\cf5 void\cf0 )dealloc\
\{\
    [\cf6 userInfo\cf0  \cf7 release\cf0 ], \cf6 userInfo\cf0  = \cf5 nil\cf0 ;\
    [\cf6 statuses\cf0  \cf7 release\cf0 ], \cf6 statuses\cf0  = \cf5 nil\cf0 ;\
    [\cf6 postStatusText\cf0  \cf7 release\cf0 ], \cf6 postStatusText\cf0  = \cf5 nil\cf0 ;\
    [\cf6 postImageStatusText\cf0  \cf7 release\cf0 ], \cf6 postImageStatusText\cf0  = \cf5 nil\cf0 ;\
    [\cf5 super\cf0  \cf7 dealloc\cf0 ];\
\}\
\
- (\cf6 SinaWeibo\cf0  *)sinaweibo\
\{\
    \cf6 SNAppDelegate\cf0  *delegate = (\cf6 SNAppDelegate\cf0  *)[\cf8 UIApplication\cf0  \cf7 sharedApplication\cf0 ].\cf8 delegate\cf0 ;\
    \cf5 return\cf0  delegate.\cf6 sinaweibo\cf0 ;\
\}\
\
- (\cf5 void\cf0 )removeAuthData\
\{\
    [[\cf8 NSUserDefaults\cf0  \cf7 standardUserDefaults\cf0 ] \cf7 removeObjectForKey\cf0 :\cf4 @"SinaWeiboAuthData"\cf0 ];\
\}\
\
- (\cf5 void\cf0 )storeAuthData\
\{\
    \cf6 SinaWeibo\cf0  *sinaweibo = [\cf5 self\cf0  \cf9 sinaweibo\cf0 ];\
    \
    \cf8 NSDictionary\cf0  *authData = [\cf8 NSDictionary\cf0  \cf7 dictionaryWithObjectsAndKeys\cf0 :\
                              sinaweibo.\cf6 accessToken\cf0 , \cf4 @"AccessTokenKey"\cf0 ,\
                              sinaweibo.\cf6 expirationDate\cf0 , \cf4 @"ExpirationDateKey"\cf0 ,\
                              sinaweibo.\cf6 userID\cf0 , \cf4 @"UserIDKey"\cf0 ,\
                              sinaweibo.\cf6 refreshToken\cf0 , \cf4 @"refresh_token"\cf0 , \cf5 nil\cf0 ];\
    [[\cf8 NSUserDefaults\cf0  \cf7 standardUserDefaults\cf0 ] \cf7 setObject\cf0 :authData \cf7 forKey\cf0 :\cf4 @"SinaWeiboAuthData"\cf0 ];\
    [[\cf8 NSUserDefaults\cf0  \cf7 standardUserDefaults\cf0 ] \cf7 synchronize\cf0 ];\
\}\
\
- (\cf5 void\cf0 )resetButtons\
\{\
    \cf6 SinaWeibo\cf0  *sinaweibo = [\cf5 self\cf0  \cf9 sinaweibo\cf0 ];\
    \cf5 BOOL\cf0  authValid = sinaweibo.\cf9 isAuthValid\cf0 ;\
\
    \cf6 loginButton\cf0 .\cf8 enabled\cf0  = !authValid;\
    \cf6 logoutButton\cf0 .\cf8 enabled\cf0  = authValid;\
    \cf6 userInfoButton\cf0 .\cf8 enabled\cf0  = authValid;\
    \cf6 timelineButton\cf0 .\cf8 enabled\cf0  = authValid;\
    \cf6 postStatusButton\cf0 .\cf8 enabled\cf0  = authValid;\
    \cf6 postImageStatusButton\cf0 .\cf8 enabled\cf0  = authValid;\
    \
    \cf5 if\cf0  (authValid)\
    \{\
        [\cf6 logoutButton\cf0  \cf7 setTitle\cf0 :[\cf8 NSString\cf0  \cf7 stringWithFormat\cf0 :\cf4 @"logout uid=%@"\cf0 , sinaweibo.\cf6 userID\cf0 ] \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
        \cf5 if\cf0  (\cf6 userInfo\cf0 )\
        \{\
            [\cf6 userInfoButton\cf0  \cf7 setTitle\cf0 :[\cf6 userInfo\cf0  \cf7 objectForKey\cf0 :\cf4 @"screen_name"\cf0 ] \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
        \}\
        \cf5 if\cf0  (\cf6 statuses\cf0 )\
        \{\
            \cf5 if\cf0  (\cf6 statuses\cf0 .\cf7 count\cf0  > \cf10 0\cf0 )\
            \{\
                [\cf6 timelineButton\cf0  \cf7 setTitle\cf0 :[[\cf6 statuses\cf0  \cf7 objectAtIndex\cf0 :\cf10 0\cf0 ] \cf7 objectForKey\cf0 :\cf4 @"text"\cf0 ] \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
            \}\
            \cf5 else\cf0 \
            \{\
                [\cf6 timelineButton\cf0  \cf7 setTitle\cf0 :\cf4 @"no status"\cf0  \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
            \}\
        \}\
    \}\
    \cf5 else\cf0 \
    \{\
        [\cf6 logoutButton\cf0  \cf7 setTitle\cf0 :\cf4 @"logout"\cf0  \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
        [\cf6 userInfoButton\cf0  \cf7 setTitle\cf0 :\cf4 @"get user info"\cf0  \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
        [\cf6 timelineButton\cf0  \cf7 setTitle\cf0 :\cf4 @"get timeline"\cf0  \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
    \}\
\}\
\
- (\cf8 UIButton\cf0  *)buttonWithFrame:(\cf8 CGRect\cf0 )frame action:(\cf5 SEL\cf0 )action\
\{\
    \cf8 UIImage\cf0  *buttonBackgroundImage = [[\cf8 UIImage\cf0  \cf7 imageNamed\cf0 :\cf4 @"button_background.png"\cf0 ] \cf7 stretchableImageWithLeftCapWidth\cf0 :\cf10 5\cf0  \cf7 topCapHeight\cf0 :\cf10 5\cf0 ];\
    \cf8 UIImage\cf0  *disabledButtonBackgroundImage = [[\cf8 UIImage\cf0  \cf7 imageNamed\cf0 :\cf4 @"button_background_disabled.png"\cf0 ] \cf7 stretchableImageWithLeftCapWidth\cf0 :\cf10 5\cf0  \cf7 topCapHeight\cf0 :\cf10 5\cf0 ];\
    \
    \cf8 UIButton\cf0  *button = [\cf8 UIButton\cf0  \cf7 buttonWithType\cf0 :\cf7 UIButtonTypeCustom\cf0 ];\
    button.\cf8 frame\cf0  = frame;\
    [button \cf7 setBackgroundImage\cf0 :buttonBackgroundImage \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
    [button \cf7 setBackgroundImage\cf0 :disabledButtonBackgroundImage \cf7 forState\cf0 :\cf7 UIControlStateDisabled\cf0 ];\
    [button \cf7 setTitleColor\cf0 :[\cf8 UIColor\cf0  \cf7 whiteColor\cf0 ] \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
    [button \cf7 setTitleColor\cf0 :[\cf8 UIColor\cf0  \cf7 grayColor\cf0 ] \cf7 forState\cf0 :\cf7 UIControlStateDisabled\cf0 ];\
    [button \cf7 addTarget\cf0 :\cf5 self\cf0  \cf7 action\cf0 :action \cf7 forControlEvents\cf0 :\cf7 UIControlEventTouchUpInside\cf0 ];\
    [\cf5 self\cf0 .\cf8 view\cf0  \cf7 addSubview\cf0 :button];\
    \
    \cf5 return\cf0  button;\
\}\
\
- (\cf5 void\cf0 )viewDidLoad\
\{\
    [\cf5 super\cf0  \cf7 viewDidLoad\cf0 ];\
    \cf5 self\cf0 .\cf8 view\cf0 .\cf8 backgroundColor\cf0  = [\cf8 UIColor\cf0  \cf7 whiteColor\cf0 ];\
    \
    \cf8 UIImageView\cf0  *logoImageView = [[\cf8 UIImageView\cf0  \cf7 alloc\cf0 ] \cf7 initWithImage\cf0 :[\cf8 UIImage\cf0  \cf7 imageNamed\cf0 :\cf4 @"logo.png"\cf0 ]];\
    logoImageView.\cf8 frame\cf0  = \cf7 CGRectMake\cf0 (\cf10 50\cf0 , \cf10 40\cf0 , \cf10 73\cf0 , \cf10 30\cf0 );\
    [\cf5 self\cf0 .\cf8 view\cf0  \cf7 addSubview\cf0 :logoImageView];\
    [logoImageView \cf7 release\cf0 ];\
    \
    \cf8 UILabel\cf0  *titleLabel = [[\cf8 UILabel\cf0  \cf7 alloc\cf0 ] \cf7 init\cf0 ];\
    titleLabel.\cf8 text\cf0  = \cf4 @"iOS SDK DEMO"\cf0 ;\
    titleLabel.\cf8 backgroundColor\cf0  = [\cf8 UIColor\cf0  \cf7 clearColor\cf0 ];\
    titleLabel.\cf8 font\cf0  = [\cf8 UIFont\cf0  \cf7 systemFontOfSize\cf0 :\cf10 18\cf0 ];\
    titleLabel.\cf8 frame\cf0  = \cf7 CGRectMake\cf0 (\cf10 140\cf0 , \cf10 40\cf0 , \cf10 140\cf0 , \cf10 30\cf0 );\
    [\cf5 self\cf0 .\cf8 view\cf0  \cf7 addSubview\cf0 :titleLabel];\
    [titleLabel \cf7 release\cf0 ];\
    \
    \cf8 NSString\cf0  *login = [\cf8 NSString\cf0  \cf7 stringWithFormat\cf0 :\cf4 @"login - appKey=%@"\cf0 , \cf11 kAppKey\cf0 ];\
    \cf6 loginButton\cf0  = [\cf5 self\cf0  \cf9 buttonWithFrame\cf0 :\cf7 CGRectMake\cf0 (\cf10 20\cf0 , \cf10 100\cf0 , \cf10 280\cf0 , \cf10 40\cf0 ) \cf9 action\cf0 :\cf5 @selector\cf0 (loginButtonPressed)];\
    [\cf6 loginButton\cf0  \cf7 setTitle\cf0 :login \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
    \
    \cf6 logoutButton\cf0  = [\cf5 self\cf0  \cf9 buttonWithFrame\cf0 :\cf7 CGRectMake\cf0 (\cf10 20\cf0 , \cf10 150\cf0 , \cf10 280\cf0 , \cf10 40\cf0 ) \cf9 action\cf0 :\cf5 @selector\cf0 (logoutButtonPressed)];\
    [\cf6 logoutButton\cf0  \cf7 setTitle\cf0 :\cf4 @"logout"\cf0  \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
    [\cf6 logoutButton\cf0  \cf7 setTitle\cf0 :\cf4 @"logout"\cf0  \cf7 forState\cf0 :\cf7 UIControlStateDisabled\cf0 ];\
    \
    \cf6 userInfoButton\cf0  = [\cf5 self\cf0  \cf9 buttonWithFrame\cf0 :\cf7 CGRectMake\cf0 (\cf10 20\cf0 , \cf10 200\cf0 , \cf10 280\cf0 , \cf10 40\cf0 ) \cf9 action\cf0 :\cf5 @selector\cf0 (userInfoButtonPressed)];\
    [\cf6 userInfoButton\cf0  \cf7 setTitle\cf0 :\cf4 @"get user info"\cf0  \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
    [\cf6 userInfoButton\cf0  \cf7 setTitle\cf0 :\cf4 @"get user info"\cf0  \cf7 forState\cf0 :\cf7 UIControlStateDisabled\cf0 ];\
    \
    \cf6 timelineButton\cf0  = [\cf5 self\cf0  \cf9 buttonWithFrame\cf0 :\cf7 CGRectMake\cf0 (\cf10 20\cf0 , \cf10 250\cf0 , \cf10 280\cf0 , \cf10 40\cf0 ) \cf9 action\cf0 :\cf5 @selector\cf0 (timelineButtonPressed)];\
    [\cf6 timelineButton\cf0  \cf7 setTitle\cf0 :\cf4 @"get timeline"\cf0  \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
    [\cf6 timelineButton\cf0  \cf7 setTitle\cf0 :\cf4 @"get timeline"\cf0  \cf7 forState\cf0 :\cf7 UIControlStateDisabled\cf0 ];\
    \
    \cf6 postStatusButton\cf0  = [\cf5 self\cf0  \cf9 buttonWithFrame\cf0 :\cf7 CGRectMake\cf0 (\cf10 20\cf0 , \cf10 300\cf0 , \cf10 280\cf0 , \cf10 40\cf0 ) \cf9 action\cf0 :\cf5 @selector\cf0 (postStatusButtonPressed)];\
    [\cf6 postStatusButton\cf0  \cf7 setTitle\cf0 :\cf4 @"post status"\cf0  \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
    \
    \cf6 postImageStatusButton\cf0  = [\cf5 self\cf0  \cf9 buttonWithFrame\cf0 :\cf7 CGRectMake\cf0 (\cf10 20\cf0 , \cf10 350\cf0 , \cf10 280\cf0 , \cf10 40\cf0 ) \cf9 action\cf0 :\cf5 @selector\cf0 (postImageStatusButtonPressed)];\
    [\cf6 postImageStatusButton\cf0  \cf7 setTitle\cf0 :\cf4 @"post status with image"\cf0  \cf7 forState\cf0 :\cf7 UIControlStateNormal\cf0 ];\
    \
    [\cf5 self\cf0  \cf9 resetButtons\cf0 ];\
\}\
\
- (\cf5 void\cf0 )loginButtonPressed\
\{\
    \cf8 UIWindow\cf0  *keyWindow = [\cf8 UIApplication\cf0  \cf7 sharedApplication\cf0 ].\cf8 keyWindow\cf0 ;\
    \cf7 NSLog\cf0 (\cf4 @"%@"\cf0 , [keyWindow \cf7 subviews\cf0 ]);\
    \
    \
    [\cf6 userInfo\cf0  \cf7 release\cf0 ], \cf6 userInfo\cf0  = \cf5 nil\cf0 ;\
    [\cf6 statuses\cf0  \cf7 release\cf0 ], \cf6 statuses\cf0  = \cf5 nil\cf0 ;\
    \
    \cf6 SinaWeibo\cf0  *sinaweibo = [\cf5 self\cf0  \cf9 sinaweibo\cf0 ];\
    [sinaweibo \cf9 logIn\cf0 ];\
\}\
\
- (\cf5 void\cf0 )logoutButtonPressed\
\{\
    \cf6 SinaWeibo\cf0  *sinaweibo = [\cf5 self\cf0  \cf9 sinaweibo\cf0 ];\
    [sinaweibo \cf9 logOut\cf0 ];\
\}\
\
- (\cf5 void\cf0 )userInfoButtonPressed\
\{\
    \cf6 SinaWeibo\cf0  *sinaweibo = [\cf5 self\cf0  \cf9 sinaweibo\cf0 ];\
    [sinaweibo \cf9 requestWithURL\cf0 :\cf4 @"users/show.json"\cf0 \
                       \cf9 params\cf0 :[\cf8 NSMutableDictionary\cf0  \cf7 dictionaryWithObject\cf0 :sinaweibo.\cf6 userID\cf0  \cf7 forKey\cf0 :\cf4 @"uid"\cf0 ]\
                   \cf9 httpMethod\cf0 :\cf4 @"GET"\cf0 \
                     \cf9 delegate\cf0 :\cf5 self\cf0 ];\
\}\
\
- (\cf5 void\cf0 )timelineButtonPressed\
\{\
    \cf6 SinaWeibo\cf0  *sinaweibo = [\cf5 self\cf0  \cf9 sinaweibo\cf0 ];\
    [sinaweibo \cf9 requestWithURL\cf0 :\cf4 @"statuses/user_timeline.json"\cf0 \
                       \cf9 params\cf0 :[\cf8 NSMutableDictionary\cf0  \cf7 dictionaryWithObject\cf0 :sinaweibo.\cf6 userID\cf0  \cf7 forKey\cf0 :\cf4 @"uid"\cf0 ]\
                   \cf9 httpMethod\cf0 :\cf4 @"GET"\cf0 \
                     \cf9 delegate\cf0 :\cf5 self\cf0 ];\
\}\
\
\cf5 static\cf0  \cf5 int\cf0  post_status_times = \cf10 0\cf0 ;\
- (\cf5 void\cf0 )postStatusButtonPressed\
\{\
    \cf5 if\cf0  (!\cf6 postStatusText\cf0 )\
    \{\
        \cf6 post_status_times\cf0  ++;\
        [\cf6 postStatusText\cf0  \cf7 release\cf0 ], \cf6 postStatusText\cf0  = \cf5 nil\cf0 ;\
        \cf6 postStatusText\cf0  = [[\cf8 NSString\cf0  \cf7 alloc\cf0 ] \cf7 initWithFormat\cf0 :\cf4 @"test post status : %i %@"\cf0 , \cf6 post_status_times\cf0 , [\cf8 NSDate\cf0  \cf7 date\cf0 ]];\
    \}\
    \
    \cf8 UIAlertView\cf0  *alertView = [[\cf8 UIAlertView\cf0  \cf7 alloc\cf0 ] \cf7 initWithTitle\cf0 :\cf4 @"Alert"\cf0 \
                                                        \cf7 message\cf0 :[\cf8 NSString\cf0  \cf7 stringWithFormat\cf0 :\cf4 @"Will post status with text \\"%@\\""\cf0 , \cf6 postStatusText\cf0 ]\
                                                       \cf7 delegate\cf0 :\cf5 self\cf0  \cf7 cancelButtonTitle\cf0 :\cf4 @"Cancel"\cf0 \
                                              \cf7 otherButtonTitles\cf0 :\cf4 @"OK"\cf0 , \cf5 nil\cf0 ];\
    alertView.\cf8 tag\cf0  = \cf10 0\cf0 ;\
    [alertView \cf7 show\cf0 ];\
    [alertView \cf7 release\cf0 ];\
\}\
\
\cf5 static\cf0  \cf5 int\cf0  post_image_status_times = \cf10 0\cf0 ;\
- (\cf5 void\cf0 )postImageStatusButtonPressed\
\{\
    \cf5 if\cf0  (!\cf6 postImageStatusText\cf0 )\
    \{\
        \cf6 post_image_status_times\cf0  ++;\
        [\cf6 postImageStatusText\cf0  \cf7 release\cf0 ], \cf6 postImageStatusText\cf0  = \cf5 nil\cf0 ;\
        \cf6 postImageStatusText\cf0  = [[\cf8 NSString\cf0  \cf7 alloc\cf0 ] \cf7 initWithFormat\cf0 :\cf4 @"test post image status : %i %@"\cf0 , \cf6 post_image_status_times\cf0 , [\cf8 NSDate\cf0  \cf7 date\cf0 ]];\
    \}\
    \
    \cf8 UIAlertView\cf0  *alertView = [[\cf8 UIAlertView\cf0  \cf7 alloc\cf0 ] \cf7 initWithTitle\cf0 :\cf4 @"Alert"\cf0 \
                                                        \cf7 message\cf0 :[\cf8 NSString\cf0  \cf7 stringWithFormat\cf0 :\cf4 @"Will post image status with text \\"%@\\""\cf0 , \cf6 postImageStatusText\cf0 ]\
                                                       \cf7 delegate\cf0 :\cf5 self\cf0  \cf7 cancelButtonTitle\cf0 :\cf4 @"Cancel"\cf0 \
                                              \cf7 otherButtonTitles\cf0 :\cf4 @"OK"\cf0 , \cf5 nil\cf0 ];\
    alertView.\cf8 tag\cf0  = \cf10 1\cf0 ;\
    [alertView \cf7 show\cf0 ];\
    [alertView \cf7 release\cf0 ];\
\}\
\
- (\cf5 void\cf0 )alertView:(\cf8 UIAlertView\cf0  *)alertView willDismissWithButtonIndex:(\cf8 NSInteger\cf0 )buttonIndex\
\{\
    \cf5 if\cf0  (buttonIndex == \cf10 1\cf0 )\
    \{\
        \cf5 if\cf0  (alertView.\cf8 tag\cf0  == \cf10 0\cf0 )\
        \{\
            \cf2 // post status\cf0 \
            \cf6 SinaWeibo\cf0  *sinaweibo = [\cf5 self\cf0  \cf9 sinaweibo\cf0 ];\
            [sinaweibo \cf9 requestWithURL\cf0 :\cf4 @"statuses/update.json"\cf0 \
                               \cf9 params\cf0 :[\cf8 NSMutableDictionary\cf0  \cf7 dictionaryWithObjectsAndKeys\cf0 :\cf6 postStatusText\cf0 , \cf4 @"status"\cf0 , \cf5 nil\cf0 ]\
                           \cf9 httpMethod\cf0 :\cf4 @"POST"\cf0 \
                             \cf9 delegate\cf0 :\cf5 self\cf0 ];\
            \
        \}\
        \cf5 else\cf0  \cf5 if\cf0  (alertView.\cf8 tag\cf0  == \cf10 1\cf0 )\
        \{\
            \cf2 // post image status\cf0 \
            \cf6 SinaWeibo\cf0  *sinaweibo = [\cf5 self\cf0  \cf9 sinaweibo\cf0 ];\
            \
            [sinaweibo \cf9 requestWithURL\cf0 :\cf4 @"statuses/upload.json"\cf0 \
                               \cf9 params\cf0 :[\cf8 NSMutableDictionary\cf0  \cf7 dictionaryWithObjectsAndKeys\cf0 :\
                                       \cf6 postImageStatusText\cf0 , \cf4 @"status"\cf0 ,\
                                       [\cf8 UIImage\cf0  \cf7 imageNamed\cf0 :\cf4 @"logo.png"\cf0 ], \cf4 @"pic"\cf0 , \cf5 nil\cf0 ]\
                           \cf9 httpMethod\cf0 :\cf4 @"POST"\cf0 \
                             \cf9 delegate\cf0 :\cf5 self\cf0 ];\
            \
        \}\
    \}\
\}\
\
- (\cf5 void\cf0 )viewDidUnload\
\{\
    [\cf5 super\cf0  \cf7 viewDidUnload\cf0 ];\
\}\
\
- (\cf5 BOOL\cf0 )shouldAutorotateToInterfaceOrientation:(\cf8 UIInterfaceOrientation\cf0 )interfaceOrientation\
\{\
    \cf5 return\cf0  \cf5 YES\cf0 ;\
\}\
\
\cf3 #pragma mark - SinaWeibo Delegate\cf0 \
\
- (\cf5 void\cf0 )sinaweiboDidLogIn:(\cf6 SinaWeibo\cf0  *)sinaweibo\
\{\
    \cf7 NSLog\cf0 (\cf4 @"sinaweiboDidLogIn userID = %@ accesstoken = %@ expirationDate = %@ refresh_token = %@"\cf0 , sinaweibo.\cf6 userID\cf0 , sinaweibo.\cf6 accessToken\cf0 , sinaweibo.\cf6 expirationDate\cf0 ,sinaweibo.\cf6 refreshToken\cf0 );\
    \
    [\cf5 self\cf0  \cf9 resetButtons\cf0 ];\
    [\cf5 self\cf0  \cf9 storeAuthData\cf0 ];\
\}\
\
- (\cf5 void\cf0 )sinaweiboDidLogOut:(\cf6 SinaWeibo\cf0  *)sinaweibo\
\{\
    \cf7 NSLog\cf0 (\cf4 @"sinaweiboDidLogOut"\cf0 );\
    [\cf5 self\cf0  \cf9 removeAuthData\cf0 ];\
    [\cf5 self\cf0  \cf9 resetButtons\cf0 ];\
\}\
\
- (\cf5 void\cf0 )sinaweiboLogInDidCancel:(\cf6 SinaWeibo\cf0  *)sinaweibo\
\{\
    \cf7 NSLog\cf0 (\cf4 @"sinaweiboLogInDidCancel"\cf0 );\
\}\
\
- (\cf5 void\cf0 )sinaweibo:(\cf6 SinaWeibo\cf0  *)sinaweibo logInDidFailWithError:(\cf8 NSError\cf0  *)error\
\{\
    \cf7 NSLog\cf0 (\cf4 @"sinaweibo logInDidFailWithError %@"\cf0 , error);\
\}\
\
- (\cf5 void\cf0 )sinaweibo:(\cf6 SinaWeibo\cf0  *)sinaweibo accessTokenInvalidOrExpired:(\cf8 NSError\cf0  *)error\
\{\
    \cf7 NSLog\cf0 (\cf4 @"sinaweiboAccessTokenInvalidOrExpired %@"\cf0 , error);\
    [\cf5 self\cf0  \cf9 removeAuthData\cf0 ];\
    [\cf5 self\cf0  \cf9 resetButtons\cf0 ];\
\}\
\
\cf3 #pragma mark - SinaWeiboRequest Delegate \cf0 \
\
- (\cf5 void\cf0 )request:(\cf6 SinaWeiboRequest\cf0  *)request didFailWithError:(\cf8 NSError\cf0  *)error\
\{\
    \cf5 if\cf0  ([request.\cf6 url\cf0  \cf7 hasSuffix\cf0 :\cf4 @"users/show.json"\cf0 ])\
    \{\
        [\cf6 userInfo\cf0  \cf7 release\cf0 ], \cf6 userInfo\cf0  = \cf5 nil\cf0 ;\
    \}\
    \cf5 else\cf0  \cf5 if\cf0  ([request.\cf6 url\cf0  \cf7 hasSuffix\cf0 :\cf4 @"statuses/user_timeline.json"\cf0 ])\
    \{\
        [\cf6 statuses\cf0  \cf7 release\cf0 ], \cf6 statuses\cf0  = \cf5 nil\cf0 ;\
    \}\
    \cf5 else\cf0  \cf5 if\cf0  ([request.\cf6 url\cf0  \cf7 hasSuffix\cf0 :\cf4 @"statuses/update.json"\cf0 ])\
    \{\
        \cf8 UIAlertView\cf0  *alertView = [[\cf8 UIAlertView\cf0  \cf7 alloc\cf0 ] \cf7 initWithTitle\cf0 :\cf4 @"Alert"\cf0 \
                                                            \cf7 message\cf0 :[\cf8 NSString\cf0  \cf7 stringWithFormat\cf0 :\cf4 @"Post status \\"%@\\" failed!"\cf0 , \cf6 postStatusText\cf0 ]\
                                                           \cf7 delegate\cf0 :\cf5 nil\cf0  \cf7 cancelButtonTitle\cf0 :\cf5 nil\cf0  \cf7 otherButtonTitles\cf0 :\cf4 @"OK"\cf0 , \cf5 nil\cf0 ];\
        [alertView \cf7 show\cf0 ];\
        [alertView \cf7 release\cf0 ];\
        \
        \cf7 NSLog\cf0 (\cf4 @"Post status failed with error : %@"\cf0 , error);\
    \}\
    \cf5 else\cf0  \cf5 if\cf0  ([request.\cf6 url\cf0  \cf7 hasSuffix\cf0 :\cf4 @"statuses/upload.json"\cf0 ])\
    \{\
        \cf8 UIAlertView\cf0  *alertView = [[\cf8 UIAlertView\cf0  \cf7 alloc\cf0 ] \cf7 initWithTitle\cf0 :\cf4 @"Alert"\cf0 \
                                                            \cf7 message\cf0 :[\cf8 NSString\cf0  \cf7 stringWithFormat\cf0 :\cf4 @"Post image status \\"%@\\" failed!"\cf0 , \cf6 postImageStatusText\cf0 ]\
                                                           \cf7 delegate\cf0 :\cf5 nil\cf0  \cf7 cancelButtonTitle\cf0 :\cf5 nil\cf0  \cf7 otherButtonTitles\cf0 :\cf4 @"OK"\cf0 , \cf5 nil\cf0 ];\
        [alertView \cf7 show\cf0 ];\
        [alertView \cf7 release\cf0 ];\
        \
        \cf7 NSLog\cf0 (\cf4 @"Post image status failed with error : %@"\cf0 , error);\
    \}\
    \
    \
    [\cf5 self\cf0  \cf9 resetButtons\cf0 ];\
\}\
\
- (\cf5 void\cf0 )request:(\cf6 SinaWeiboRequest\cf0  *)request didFinishLoadingWithResult:(\cf5 id\cf0 )result\
\{\
    \cf5 if\cf0  ([request.\cf6 url\cf0  \cf7 hasSuffix\cf0 :\cf4 @"users/show.json"\cf0 ])\
    \{\
        [\cf6 userInfo\cf0  \cf7 release\cf0 ];\
        \cf6 userInfo\cf0  = [result \cf7 retain\cf0 ];\
    \}\
    \cf5 else\cf0  \cf5 if\cf0  ([request.\cf6 url\cf0  \cf7 hasSuffix\cf0 :\cf4 @"statuses/user_timeline.json"\cf0 ])\
    \{\
        [\cf6 statuses\cf0  \cf7 release\cf0 ];\
        \cf6 statuses\cf0  = [[result \cf7 objectForKey\cf0 :\cf4 @"statuses"\cf0 ] \cf7 retain\cf0 ];\
    \}\
    \cf5 else\cf0  \cf5 if\cf0  ([request.\cf6 url\cf0  \cf7 hasSuffix\cf0 :\cf4 @"statuses/update.json"\cf0 ])\
    \{\
        \cf8 UIAlertView\cf0  *alertView = [[\cf8 UIAlertView\cf0  \cf7 alloc\cf0 ] \cf7 initWithTitle\cf0 :\cf4 @"Alert"\cf0 \
                                                            \cf7 message\cf0 :[\cf8 NSString\cf0  \cf7 stringWithFormat\cf0 :\cf4 @"Post status \\"%@\\" succeed!"\cf0 , [result \cf7 objectForKey\cf0 :\cf4 @"text"\cf0 ]]\
                                                           \cf7 delegate\cf0 :\cf5 nil\cf0  \cf7 cancelButtonTitle\cf0 :\cf5 nil\cf0  \cf7 otherButtonTitles\cf0 :\cf4 @"OK"\cf0 , \cf5 nil\cf0 ];\
        [alertView \cf7 show\cf0 ];\
        [alertView \cf7 release\cf0 ];\
\
        [\cf6 postStatusText\cf0  \cf7 release\cf0 ], \cf6 postStatusText\cf0  = \cf5 nil\cf0 ;\
    \}\
    \cf5 else\cf0  \cf5 if\cf0  ([request.\cf6 url\cf0  \cf7 hasSuffix\cf0 :\cf4 @"statuses/upload.json"\cf0 ])\
    \{\
        \cf8 UIAlertView\cf0  *alertView = [[\cf8 UIAlertView\cf0  \cf7 alloc\cf0 ] \cf7 initWithTitle\cf0 :\cf4 @"Alert"\cf0 \
                                                            \cf7 message\cf0 :[\cf8 NSString\cf0  \cf7 stringWithFormat\cf0 :\cf4 @"Post image status \\"%@\\" succeed!"\cf0 , [result \cf7 objectForKey\cf0 :\cf4 @"text"\cf0 ]]\
                                                           \cf7 delegate\cf0 :\cf5 nil\cf0  \cf7 cancelButtonTitle\cf0 :\cf5 nil\cf0  \cf7 otherButtonTitles\cf0 :\cf4 @"OK"\cf0 , \cf5 nil\cf0 ];\
        [alertView \cf7 show\cf0 ];\
        [alertView \cf7 release\cf0 ];\
        \
        [\cf6 postImageStatusText\cf0  \cf7 release\cf0 ], \cf6 postImageStatusText\cf0  = \cf5 nil\cf0 ;\
    \}\
    \
    [\cf5 self\cf0  \cf9 resetButtons\cf0 ];\
\}\
\
\cf5 @end\cf0 \
}